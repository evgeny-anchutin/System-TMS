
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Результат") Тогда
		Результат.Вывести(Параметры.Результат);
	Иначе
		Элементы.Результат.ОтображатьСетку = Истина;
	КонецЕсли; 
	
	СуммаЯчеекСтруктура = Новый Структура("Сумма,Количество,Минимальное,Максимальное,Среднее", 0, 0, 0, 0, 0);
	
	Элементы.ОтображатьСетку.Пометка = Элементы.Результат.ОтображатьСетку;
	Элементы.ОтображатьЗаголовки.Пометка = Элементы.Результат.ОтображатьЗаголовки;

КонецПроцедуры

&НаКлиенте
Процедура ОтображатьСетку(Команда)
	
	Элементы.Результат.ОтображатьСетку = НЕ Элементы.Результат.ОтображатьСетку;
	Элементы.ОтображатьСетку.Пометка = Элементы.Результат.ОтображатьСетку;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьЗаголовки(Команда)
	
	Элементы.Результат.ОтображатьЗаголовки = НЕ Элементы.Результат.ОтображатьЗаголовки;
	Элементы.ОтображатьЗаголовки.Пометка = Элементы.Результат.ОтображатьЗаголовки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьТекущуюОбласть(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;

	тВерх  = ПолеТабличногоДокумента.ТекущаяОбласть.Верх;
	тНиз   = ПолеТабличногоДокумента.ТекущаяОбласть.Низ;
	тЛево  = ПолеТабличногоДокумента.ТекущаяОбласть.Лево;
	тПраво = ПолеТабличногоДокумента.ТекущаяОбласть.Право;
	
	ОбойтиСлева  = тЛево > 1;
	ОбойтиСверху = тВерх > 1;
	ОбойтиСнизу  = Истина;
	ОбойтиСправа = Истина;
	
	Пока Истина Цикл
		
		Если ОбойтиСлева Тогда
		    тКол = тЛево - 1;
			ЕстьЗначения = Ложь;
			Для тСтр = тВерх По тНиз Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тЛево = тЛево - ?(ЕстьЗначения, 1, 0);
			ОбойтиСлева  = тЛево > 1 И ЕстьЗначения;
		КонецЕсли;
		
		Если ОбойтиСверху Тогда
		    тСтр = тВерх - 1;
			ЕстьЗначения = Ложь;
			Для тКол = тЛево По тПраво Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тВерх = тВерх - ?(ЕстьЗначения, 1, 0);
			ОбойтиСверху = тВерх > 1 И ЕстьЗначения;
		КонецЕсли; 
		
		Если ОбойтиСправа Тогда
		    тКол = тПраво + 1;
			ЕстьЗначения = Ложь;
			Для тСтр = тВерх По тНиз Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тПраво = тПраво + ?(ЕстьЗначения, 1, 0);
			ОбойтиСправа = ЕстьЗначения;
		КонецЕсли; 

		Если ОбойтиСнизу Тогда
		    тСтр = тНиз + 1;
			ЕстьЗначения = Ложь;
			Для тКол = тЛево По тПраво Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тНиз = тНиз + ?(ЕстьЗначения, 1, 0);
			ОбойтиСнизу = ЕстьЗначения;
		КонецЕсли; 

		Если НЕ ОбойтиСверху И НЕ ОбойтиСнизу И НЕ ОбойтиСлева И НЕ ОбойтиСправа Тогда
			Прервать;
		КонецЕсли; 
		
	КонецЦикла; 

	Элементы.Результат.ТекущаяОбласть = ПолеТабличногоДокумента.Область(тВерх, тЛево, тНиз, тПраво);
	
КонецПроцедуры

&НаКлиенте
Функция ЯчейкаЗаполнена(тОбл)

	Возврат тОбл.ГраницаСверху.ТипЛинии <> ТипЛинииЯчейкиТабличногоДокумента.НетЛинии;

КонецФункции

&НаКлиенте
Процедура ВыделитьТекущуюКолонку(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;

	МинВерх = 0;
	МаксНиз = 0;
	МаксПраво = 0;
	МинЛево = 0;
	
	Для каждого Область Из ПолеТабличногоДокумента.ВыделенныеОбласти Цикл

		Если ТипЗнч(Область) = Тип("РисунокТабличногоДокумента") Тогда 
			Продолжить;
		КонецЕсли;
		
		Если НЕ Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			Продолжить;
		КонецЕсли; 

		Если МинВерх = 0 Тогда
		    МинВерх = Область.Верх;
		Иначе
		    МинВерх = Мин(МинВерх, Область.Верх);
		КонецЕсли; 
		
		Если МаксНиз = 0 Тогда
		    МаксНиз = Область.Низ;
		Иначе
		    МаксНиз = Макс(МаксНиз, Область.Низ);
		КонецЕсли; 
		
		Если МаксПраво = 0 Тогда
		    МаксПраво = Область.Право;
		Иначе
		    МаксПраво = Макс(МаксПраво, Область.Право);
		КонецЕсли; 
		
		Если МинЛево = 0 Тогда
		    МинЛево = Область.Лево;
		Иначе
		    МинЛево = Мин(МинЛево, Область.Лево);
		КонецЕсли; 
		
	КонецЦикла; 

	тВерх  = Мин(ПолеТабличногоДокумента.ТекущаяОбласть.Верх  , МинВерх);
	тНиз   = Макс(ПолеТабличногоДокумента.ТекущаяОбласть.Низ  , МаксНиз);
	тЛево  = Мин(ПолеТабличногоДокумента.ТекущаяОбласть.Лево  , МинЛево);
	тПраво = Макс(ПолеТабличногоДокумента.ТекущаяОбласть.Право, МаксПраво);

	//ОбойтиСлева  = тЛево > 1;
	ОбойтиСверху = тВерх > 1;
	ОбойтиСнизу  = Истина;
	//ОбойтиСправа = Истина;
	
	Пока Истина Цикл
		
		//Если ОбойтиСлева Тогда
		//    тКол = тЛево - 1;
		//	ЕстьЗначения = Ложь;
		//	Для тСтр = тВерх По тНиз Цикл
		//		тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
		//		Если ЯчейкаЗаполнена(тОбл) Тогда
		//		    ЕстьЗначения = Истина;
		//			Прервать;
		//		КонецЕсли;
		//	КонецЦикла; 
		//    тЛево = тЛево - ?(ЕстьЗначения, 1, 0);
		//	ОбойтиСлева  = тЛево > 1 И ЕстьЗначения;
		//КонецЕсли;
		
		Если ОбойтиСверху Тогда
		    тСтр = тВерх - 1;
			ЕстьЗначения = Ложь;
			Для тКол = тЛево По тПраво Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тВерх = тВерх - ?(ЕстьЗначения, 1, 0);
			ОбойтиСверху = тВерх > 1 И ЕстьЗначения;
		КонецЕсли; 
		
		//Если ОбойтиСправа Тогда
		//    тКол = тПраво + 1;
		//	ЕстьЗначения = Ложь;
		//	Для тСтр = тВерх По тНиз Цикл
		//		тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
		//		Если ЯчейкаЗаполнена(тОбл) Тогда
		//		    ЕстьЗначения = Истина;
		//			Прервать;
		//		КонецЕсли;
		//	КонецЦикла; 
		//    тПраво = тПраво + ?(ЕстьЗначения, 1, 0);
		//	ОбойтиСправа = ЕстьЗначения;
		//КонецЕсли; 

		Если ОбойтиСнизу Тогда
		    тСтр = тНиз + 1;
			ЕстьЗначения = Ложь;
			Для тКол = тЛево По тПраво Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тНиз = тНиз + ?(ЕстьЗначения, 1, 0);
			ОбойтиСнизу = ЕстьЗначения;
		КонецЕсли; 

		Если НЕ ОбойтиСверху И НЕ ОбойтиСнизу Тогда
			Прервать;
		КонецЕсли; 
		
	КонецЦикла; 

	Элементы.Результат.ТекущаяОбласть = ПолеТабличногоДокумента.Область(тВерх, МинЛево, тНиз, МаксПраво);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьТекущуюСтроку(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;

	МинВерх = 0;
	МаксНиз = 0;
	МаксПраво = 0;
	МинЛево = 0;
	
	Для каждого Область Из ПолеТабличногоДокумента.ВыделенныеОбласти Цикл

		Если ТипЗнч(Область) = Тип("РисунокТабличногоДокумента") Тогда 
			Продолжить;
		КонецЕсли;
		
		Если НЕ Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			Продолжить;
		КонецЕсли; 

		Если МинВерх = 0 Тогда
		    МинВерх = Область.Верх;
		Иначе
		    МинВерх = Мин(МинВерх, Область.Верх);
		КонецЕсли; 
		
		Если МаксНиз = 0 Тогда
		    МаксНиз = Область.Низ;
		Иначе
		    МаксНиз = Макс(МаксНиз, Область.Низ);
		КонецЕсли; 
		
		Если МаксПраво = 0 Тогда
		    МаксПраво = Область.Право;
		Иначе
		    МаксПраво = Макс(МаксПраво, Область.Право);
		КонецЕсли; 
		
		Если МинЛево = 0 Тогда
		    МинЛево = Область.Лево;
		Иначе
		    МинЛево = Мин(МинЛево, Область.Лево);
		КонецЕсли; 
		
	КонецЦикла; 

	тВерх  = Мин(ПолеТабличногоДокумента.ТекущаяОбласть.Верх  , МинВерх);
	тНиз   = Макс(ПолеТабличногоДокумента.ТекущаяОбласть.Низ  , МаксНиз);
	тЛево  = Мин(ПолеТабличногоДокумента.ТекущаяОбласть.Лево  , МинЛево);
	тПраво = Макс(ПолеТабличногоДокумента.ТекущаяОбласть.Право, МаксПраво);

	ОбойтиСлева  = тЛево > 1;
	//ОбойтиСверху = тВерх > 1;
	//ОбойтиСнизу  = Истина;
	ОбойтиСправа = Истина;
	
	Пока Истина Цикл
		
		Если ОбойтиСлева Тогда
		    тКол = тЛево - 1;
			ЕстьЗначения = Ложь;
			Для тСтр = тВерх По тНиз Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тЛево = тЛево - ?(ЕстьЗначения, 1, 0);
			ОбойтиСлева  = тЛево > 1 И ЕстьЗначения;
		КонецЕсли;
		
		//Если ОбойтиСверху Тогда
		//    тСтр = тВерх - 1;
		//	ЕстьЗначения = Ложь;
		//	Для тКол = тЛево По тПраво Цикл
		//		тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
		//		Если ЯчейкаЗаполнена(тОбл) Тогда
		//		    ЕстьЗначения = Истина;
		//			Прервать;
		//		КонецЕсли;
		//	КонецЦикла; 
		//    тВерх = тВерх - ?(ЕстьЗначения, 1, 0);
		//	ОбойтиСверху = тВерх > 1 И ЕстьЗначения;
		//КонецЕсли; 
		
		Если ОбойтиСправа Тогда
		    тКол = тПраво + 1;
			ЕстьЗначения = Ложь;
			Для тСтр = тВерх По тНиз Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тПраво = тПраво + ?(ЕстьЗначения, 1, 0);
			ОбойтиСправа = ЕстьЗначения;
		КонецЕсли; 

		//Если ОбойтиСнизу Тогда
		//    тСтр = тНиз + 1;
		//	ЕстьЗначения = Ложь;
		//	Для тКол = тЛево По тПраво Цикл
		//		тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
		//		Если ЯчейкаЗаполнена(тОбл) Тогда
		//		    ЕстьЗначения = Истина;
		//			Прервать;
		//		КонецЕсли;
		//	КонецЦикла; 
		//    тНиз = тНиз + ?(ЕстьЗначения, 1, 0);
		//	ОбойтиСнизу = ЕстьЗначения;
		//КонецЕсли; 

		Если НЕ ОбойтиСлева И НЕ ОбойтиСправа Тогда
			Прервать;
		КонецЕсли; 
		
	КонецЦикла; 

	Элементы.Результат.ТекущаяОбласть = ПолеТабличногоДокумента.Область(МинВерх, тЛево, МаксНиз, тПраво);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;

	Сумма = 0;
	Количество = 0;
	Максимальное = 0;
	Минимальное = 0;
	АдресаЯчеек = Новый Структура;

	Для каждого Область Из ПолеТабличногоДокумента.ВыделенныеОбласти Цикл
	
		Если ТипЗнч(Область) = Тип("РисунокТабличногоДокумента") ИЛИ Область = Неопределено Тогда  // ОбластьЯчеекТабличногоДокумента
			Продолжить;
		КонецЕсли;
		
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Таблица Тогда
			Продолжить;
		ИначеЕсли Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			СуммироватьЗначения(Область.Верх, Область.Низ, Область.Лево, Область.Право, Сумма, Количество, Максимальное, Минимальное, АдресаЯчеек, ПолеТабличногоДокумента);
		ИначеЕсли Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
			СуммироватьЗначения(Область.Верх, Область.Низ, 1, ПолеТабличногоДокумента.ШиринаТаблицы, Сумма, Количество, Максимальное, Минимальное, АдресаЯчеек, ПолеТабличногоДокумента);
		ИначеЕсли Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Колонки Тогда
			СуммироватьЗначения(1, ПолеТабличногоДокумента.ВысотаТаблицы, Область.Лево, Область.Право, Сумма, Количество, Максимальное, Минимальное, АдресаЯчеек, ПолеТабличногоДокумента);
		КонецЕсли; 

	КонецЦикла; 
	
	СуммаЯчеек = Сумма;
	СуммаЯчеекСтруктура.Сумма = Сумма;
	СуммаЯчеекСтруктура.Количество = Количество;
	СуммаЯчеекСтруктура.Минимальное = Минимальное;
	СуммаЯчеекСтруктура.Максимальное = Максимальное;
	СуммаЯчеекСтруктура.Среднее = ?(Количество = 0, 0, Сумма / Количество);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СуммироватьЗначения(Верх, Низ, Лево, Право, Сумма, Количество, Максимальное, Минимальное, АдресаЯчеек, ПолеТабличногоДокумента)
	
	ТипЧисло = Тип("Число");
	
	Для ИндСтр = Верх По Низ Цикл
		Для ИндКол = Лево По Право Цикл
			//Попытка
			//	ИмяОбласти = "R" + Формат(ИндСтр, "ЧГ=0") + "C" + Формат(ИндКол, "ЧГ=0");
			//	Если АдресаЯчеек.Свойство(ИмяОбласти) Тогда
			//		Продолжить;
			//	Иначе
			//		АдресаЯчеек.Вставить(ИмяОбласти);
			//	КонецЕсли; 
			//	СуммаЯчейки = Число(СтрЗаменить(ПолеТабличногоДокумента.Область(ИмяОбласти).Текст, " ", ""));
			//	Сумма = Сумма + СуммаЯчейки;
			//	Количество = Количество + 1;
			//	
			//	Если Максимальное = 0 Тогда
			//	    Максимальное = СуммаЯчейки;
			//	ИначеЕсли Максимальное < СуммаЯчейки Тогда
			//	    Максимальное = СуммаЯчейки;
			//	КонецЕсли; 
			//	
			//	Если Минимальное = 0 Тогда
			//	    Минимальное = СуммаЯчейки;
			//	ИначеЕсли Минимальное > СуммаЯчейки Тогда
			//	    Минимальное = СуммаЯчейки;
			//	КонецЕсли; 
			//	
			//Исключение
			//КонецПопытки;
			ИмяОбласти = "R" + Формат(ИндСтр, "ЧГ=0") + "C" + Формат(ИндКол, "ЧГ=0");
			Если АдресаЯчеек.Свойство(ИмяОбласти) Тогда
				Продолжить;
			Иначе
				АдресаЯчеек.Вставить(ИмяОбласти);
			КонецЕсли; 
			Если НЕ ПолеТабличногоДокумента.Область(ИмяОбласти).СодержитЗначение Тогда
				Продолжить;
			КонецЕсли; 
			ЗначениеЯчейки = ПолеТабличногоДокумента.Область(ИмяОбласти).Значение;
			Если ТипЗнч(ЗначениеЯчейки) = ТипЧисло Тогда
				Сумма = Сумма + ЗначениеЯчейки;
				Количество = Количество + 1;
				
				Если Максимальное = 0 Тогда
					Максимальное = ЗначениеЯчейки;
				ИначеЕсли Максимальное < ЗначениеЯчейки Тогда
					Максимальное = ЗначениеЯчейки;
				КонецЕсли; 
				
				Если Минимальное = 0 Тогда
					Минимальное = ЗначениеЯчейки;
				ИначеЕсли Минимальное > ЗначениеЯчейки Тогда
					Минимальное = ЗначениеЯчейки;
				КонецЕсли; 
				
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры


&НаКлиенте
Процедура СуммаЯчеекНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("ВнешняяОбработка.КонсольЗапросовУФ.Форма.ФормаПоказанияЯчеек", СуммаЯчеекСтруктура);
	
КонецПроцедуры


&НаКлиенте
Процедура МЗаместить(Команда)
	СуммаВПамяти = СуммаЯчеек;
КонецПроцедуры

&НаКлиенте
Процедура МПлюс(Команда)
	СуммаВПамяти = СуммаВПамяти + СуммаЯчеек;
КонецПроцедуры


&НаКлиенте
Процедура ММинус(Команда)
	СуммаВПамяти = СуммаВПамяти - СуммаЯчеек;
КонецПроцедуры


&НаКлиенте
Процедура МРазделить(Команда)
	СуммаВПамяти = ?(СуммаЯчеек = 0, 0, СуммаВПамяти / СуммаЯчеек);
КонецПроцедуры


&НаКлиенте
Процедура МУмножить(Команда)
	СуммаВПамяти = СуммаВПамяти * СуммаЯчеек;
КонецПроцедуры

&НаКлиенте
Процедура ЕМинус(Команда)
	СуммаВПамяти = СуммаЯчеек - СуммаВПамяти;
КонецПроцедуры

&НаКлиенте
Процедура ЕРазделить(Команда)
	СуммаВПамяти = СуммаЯчеек / СуммаВПамяти;
КонецПроцедуры

&НаСервере
Процедура ДобавитьИтоговоуюСтрокуТаблицыНаСервере()
	
	//ОбластьЯчеек = Элементы.Результат.ТекущаяОбласть;
	//
	//КолонкиСЧислами = Новый Структура;
	//ТабЗначений2 = Новый ТаблицаЗначений;
	//Для Сч = 1 По Элементы.Результат.ТекущаяОбласть.Право Цикл
	//	
	//	ТипыКолонкиСтрокой = Результат.Область(Элементы.Результат.ТекущаяОбласть.Верх,Сч).Примечание.Текст;
	//	ИмяКолонкиОбрабатываемой = Результат.Область(Элементы.Результат.ТекущаяОбласть.Верх,Сч).Текст;
	//	Если Найти(ТипыКолонкиСтрокой, "Число") > 0 Тогда
	//		КолонкиСЧислами.Вставить(ИмяКолонкиОбрабатываемой);
	//	КонецЕсли;
	//	
	//	ТабЗначений2.Колонки.Добавить(ИмяКолонкиОбрабатываемой, Новый ОписаниеТипов("Null, Число, Строка"));
	//	
	//КонецЦикла; 

	//ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);
	//
	//ПостроительОтчета = Новый ПостроительОтчета; 
	//ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	//ПостроительОтчета.Выполнить();
	//
	//ТабЗначений = ПостроительОтчета.Результат.Выгрузить();
	//
	//ТипЧисло = Тип("Число");
	////Для каждого Колонка Из ТабЗначений.Колонки Цикл
	////	ТабЗначений2.Колонки.Добавить(Колонка.Имя, Новый ОписаниеТипов(Колонка.ТипЗначения, "Число"));
	////КонецЦикла;

	//Для каждого Строка Из ТабЗначений Цикл
	//	
	//	НоваяСтрока = ТабЗначений2.Добавить();
	//	Для каждого Колонка Из ТабЗначений.Колонки Цикл
	//		
	//		Если НЕ КолонкиСЧислами.Свойство(Колонка.Имя) Тогда
	//			Продолжить;
	//		КонецЕсли; 
	//		
	//		ТекущееЗначение = Строка[Колонка.Имя];
	//		Попытка
	//		НоваяСтрока[Колонка.Имя] = Число(ТекущееЗначение);
	//		//КолонкиСЧислами.Вставить(Колонка.Имя);
	//		Исключение
	//		НоваяСтрока[Колонка.Имя] = ТекущееЗначение;
	//		КонецПопытки;
	//	
	//	КонецЦикла; 
	//
	//КонецЦикла;
	//
	//Результат.ВставитьОбласть(Результат.Область(ОбластьЯчеек.Низ, , ОбластьЯчеек.Низ, ), Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ),ТипСмещенияТабличногоДокумента.ПоВертикали, Истина);	
	//Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ).Очистить(Истина, Ложь, Истина);
	//Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Забивать;
	//
	//ИндексКолонки = -1;
	//Для каждого Колонка Из ТабЗначений.Колонки Цикл
	//	
	//	ИндексКолонки = ИндексКолонки + 1;
	//	
	//	Если НЕ КолонкиСЧислами.Свойство(Колонка.Имя) Тогда
	//		Продолжить;
	//	КонецЕсли; 
	//	
	//	//Результат.Область(ОбластьЯчеек.Низ+1, ИндексКолонки + 1).Текст = ТабЗначений2.Итог(ТабЗначений2.Колонки[ИндексКолонки]);
	//	Результат.Область(ОбластьЯчеек.Низ+1, ИндексКолонки + 1).Значение = ТабЗначений2.Итог(ТабЗначений2.Колонки[ИндексКолонки]);
	//КонецЦикла;
	
	////////////////////////////////////////////
		
	ОбластьЯчеек = Элементы.Результат.ТекущаяОбласть;

	ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);
	
	ПостроительОтчета = Новый ПостроительОтчета; 
	ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	ПостроительОтчета.Выполнить();
	
	ТабЗначений = ПостроительОтчета.Результат.Выгрузить();
	
	ТипЧисло = Тип("Число");
	
	Результат.ВставитьОбласть(Результат.Область(ОбластьЯчеек.Низ, , ОбластьЯчеек.Низ, ), Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ),ТипСмещенияТабличногоДокумента.ПоВертикали, Истина);	
	Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ).Очистить(Истина, Ложь, Истина);
	Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Забивать;
	
	Об = РеквизитФормыВЗначение("Объект");
	
	Для каждого Колонка Из ТабЗначений.Колонки Цикл
		
		ОписаниеТипаЗначения = Колонка.ТипЗначения;
		
		Если НЕ ОписаниеТипаЗначения.СодержитТип(ТипЧисло) Тогда
			Продолжить;
		КонецЕсли;
		
		
		//Результат.Область(ОбластьЯчеек.Низ+1, ИндексКолонки + 1).Значение = ТабЗначений.Итог(ТабЗначений.Колонки[ИндексКолонки]);
		ЗначениеИтога = ТабЗначений.Итог(Колонка);
		Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).Значение = ЗначениеИтога;
		
		Оформление = Об.ПараметрыДляОтображенияЯчейки(ЗначениеИтога, Неопределено, ОписаниеТипаЗначения);
		//ШириныКолонок[Колонки[СчКол - 1].Имя] = Макс(ШириныКолонок[Колонки[СчКол - 1].Имя], Оформление.Ширина);
		//ОблЯчейки.Текст = Оформление.Текст;
		Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).ЦветТекста = Оформление.ЦветТекста;
		Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).Расшифровка = Оформление.Значение;
		
	КонецЦикла;

	Элементы.Результат.ТекущаяОбласть = ЭтаФорма.Результат.Область(ОбластьЯчеек.Низ+1, 1, ОбластьЯчеек.Низ+1, ОбластьЯчеек.Право);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИтоговоуюСтрокуТаблицы(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;

	Если НЕ ЯчейкаЗаполнена(ПолеТабличногоДокумента.ТекущаяОбласть) Тогда
	    ПоказатьПредупреждение(, "Активная ячейка выделения должна быть в таблице!");
		Возврат;
	КонецЕсли;
	
	ВыделитьТекущуюОбласть(Неопределено);
	ДобавитьИтоговоуюСтрокуТаблицыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СвернутьТаблицуНаСервере(пРезультат = Неопределено, пПараметры = Неопределено)
		
	ОбластьЯчеек = Элементы.Результат.ТекущаяОбласть;

	ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);
	
	ПостроительОтчета = Новый ПостроительОтчета; 
	ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	ПостроительОтчета.Выполнить();
	
	ТабЗначений = ПостроительОтчета.Результат.Выгрузить();
	
	КолонкиГруппировок = "";
	КолонкиСуммирования = "";
	
	Для каждого Стр Из пРезультат Цикл
	
		Если НЕ Стр.Группировать И НЕ Стр.Суммировать Тогда
			ТабЗначений.ЗаполнитьЗначения(Null, Стр.Имя);
			КолонкиГруппировок = КолонкиГруппировок + ?(КолонкиГруппировок = "", "", ",") + Стр.Имя;
		ИначеЕсли Стр.Группировать Тогда
			КолонкиГруппировок = КолонкиГруппировок + ?(КолонкиГруппировок = "", "", ",") + Стр.Имя;
		ИначеЕсли Стр.Суммировать Тогда
			КолонкиСуммирования = КолонкиСуммирования + ?(КолонкиСуммирования = "", "", ",") + Стр.Имя;
		КонецЕсли; 
	
	КонецЦикла; 
	
	ТабЗначений.Свернуть(КолонкиГруппировок, КолонкиСуммирования); 
	Об = РеквизитФормыВЗначение("Объект");
	
	СтрокВТаблице = ТабЗначений.Количество();
	
	Для Сч = 1  По СтрокВТаблице + 3 Цикл
		Результат.ВставитьОбласть(Результат.Область(ОбластьЯчеек.Низ, , ОбластьЯчеек.Низ, ), Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ),ТипСмещенияТабличногоДокумента.ПоВертикали, Истина);	
		Результат.Область(ОбластьЯчеек.Низ + 1, , ОбластьЯчеек.Низ + 1, ).Очистить(Истина, Ложь, Ложь);
		//Результат.Область(ОбластьЯчеек.Низ + 1, , ОбластьЯчеек.Низ + 1, ).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Забивать;
	КонецЦикла; 
	
	// Пустая строка для разрыва от исходной таблицы.
	Результат.Область(ОбластьЯчеек.Низ + 1, , ОбластьЯчеек.Низ + 1, ).Очистить(Истина, Истина, Истина);
	
	// Вывод заголовка.
	Результат.ВставитьОбласть(Результат.Область(ОбластьЯчеек.Верх, , ОбластьЯчеек.Верх, ), Результат.Область(ОбластьЯчеек.Низ + 2, , ОбластьЯчеек.Низ + 2, ),ТипСмещенияТабличногоДокумента.БезСмещения, Истина);	
	
	
	// Вывод значений.
	Для Сч = 1  По СтрокВТаблице Цикл
		ТекСвернутаяСтрока = ТабЗначений[Сч - 1];
		ИндексКолонки = -1;
		Для каждого Колонка Из ТабЗначений.Колонки Цикл
			ИндексКолонки = ИндексКолонки + 1;
			
			ОписаниеТипаЗначения = Колонка.ТипЗначения;
			ЗначениеИтога = ТекСвернутаяСтрока[ИндексКолонки];

			Если Результат.Область(ОбластьЯчеек.Низ + 2 + Сч, ИндексКолонки + 1).СодержитЗначение Тогда
				Результат.Область(ОбластьЯчеек.Низ + 2 + Сч, ИндексКолонки + 1).Значение = ЗначениеИтога;
			Иначе
				Результат.Область(ОбластьЯчеек.Низ + 2 + Сч, ИндексКолонки + 1).Текст = ЗначениеИтога;
			КонецЕсли; 
			
			Оформление = Об.ПараметрыДляОтображенияЯчейки(ЗначениеИтога, Неопределено, ОписаниеТипаЗначения);
			Результат.Область(ОбластьЯчеек.Низ + 2 + Сч, ИндексКолонки + 1).ЦветТекста = Оформление.ЦветТекста;
			Результат.Область(ОбластьЯчеек.Низ + 2 + Сч, ИндексКолонки + 1).Расшифровка = Оформление.Значение;
			
		КонецЦикла;
	КонецЦикла; 
	
	// Вывод подвала.
	НомерСтрокиПодвала = ОбластьЯчеек.Низ + 2 + Сч;
	Для Сч = 1 По ОбластьЯчеек.Право Цикл
		Если Найти(КолонкиСуммирования, ТабЗначений.Колонки[Сч - 1].Имя) > 0 Тогда
			
			ОписаниеТипаЗначения = ТабЗначений.Колонки[Сч - 1].ТипЗначения;
			ЗначениеИтога = ТабЗначений.Итог(ТабЗначений.Колонки[Сч - 1]);

			Результат.Область(НомерСтрокиПодвала, Сч).Значение = ЗначениеИтога;
			
			Оформление = Об.ПараметрыДляОтображенияЯчейки(ЗначениеИтога, Неопределено, ОписаниеТипаЗначения);
			Результат.Область(НомерСтрокиПодвала, Сч).ЦветТекста = Оформление.ЦветТекста;
			Результат.Область(НомерСтрокиПодвала, Сч).Расшифровка = Оформление.Значение;
			
		КонецЕсли;  
	КонецЦикла;
	
	Результат.Область(НомерСтрокиПодвала, , НомерСтрокиПодвала, ).Очистить(Ложь, Ложь, Истина);
	Результат.Область(НомерСтрокиПодвала, , НомерСтрокиПодвала, ).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Забивать;

	Элементы.Результат.ТекущаяОбласть = ЭтаФорма.Результат.Область(ОбластьЯчеек.Низ + 2, 1, НомерСтрокиПодвала, ОбластьЯчеек.Право);
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьТаблицуНаКлиенте(пРезультат = Неопределено, пПараметры = Неопределено) Экспорт
	
	Если пПараметры.ИмяШага = "ВыбратьКолонкиСвертки" Тогда
		
		ОбластьЯчеек = Элементы.Результат.ТекущаяОбласть;
		
		ОписаниеКолонок = Новый Массив;
		
		Для Сч = 1 По ОбластьЯчеек.Право Цикл
			ЯчейкаЗаголовка = Результат.Область(ОбластьЯчеек.Верх, Сч);
			ИменаКолонок = Новый Структура("Имя,Тип", ЯчейкаЗаголовка.Текст, ЯчейкаЗаголовка.Примечание.Текст);
			ОписаниеКолонок.Добавить(ИменаКолонок);
		КонецЦикла;
		
		пПараметры.ИмяШага = "Свернуть";
		
		ПараметрыФормы = Новый Структура("ОписаниеКолонок", ОписаниеКолонок);
		Оповещение = Новый ОписаниеОповещения("СвернутьТаблицуНаКлиенте", ЭтаФорма, пПараметры);
		
		ОткрытьФорму("ВнешняяОбработка.КонсольЗапросовУФ.Форма.ФормаНастройкаСверткиТаблицыЗначений", ПараметрыФормы, ЭтаФорма, ЭтаФорма, , , Оповещение, );
		
	ИначеЕсли пПараметры.ИмяШага = "Свернуть" Тогда
		
		Если пРезультат = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		
		СвернутьТаблицуНаСервере(пРезультат, пПараметры)
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьТаблицу(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;
	
	Если НЕ ЯчейкаЗаполнена(ПолеТабличногоДокумента.ТекущаяОбласть) Тогда
		ПоказатьПредупреждение(, "Активная ячейка выделения должна быть в таблице!");
		Возврат;
	КонецЕсли;
	
	ВыделитьТекущуюОбласть(Неопределено);
	
	пПараметры = Новый Структура("ИмяШага", "ВыбратьКолонкиСвертки");
	СвернутьТаблицуНаКлиенте(, пПараметры);
	
КонецПроцедуры



