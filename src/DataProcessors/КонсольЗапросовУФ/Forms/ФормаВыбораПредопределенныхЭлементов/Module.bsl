
////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ТипОбъекта.РежимВыбораИзСписка = Истина;
	СписокВыбора = Элементы.ТипОбъекта.СписокВыбора;
	СписокВыбора.Добавить("Справочник");
	СписокВыбора.Добавить("Документ");
	СписокВыбора.Добавить("Перечисление");
	СписокВыбора.Добавить("ПланВидовХарактеристик");
	СписокВыбора.Добавить("ПланСчетов");
	СписокВыбора.Добавить("ПланВидовРасчета");
	СписокВыбора.Добавить("БизнесПроцесс");
	СписокВыбора.Добавить("Задача");
	
	Если Параметры.Свойство("ВыделенныйТекст") Тогда
		
		пВыделенныйТекст = СтрЗаменить(Параметры.ВыделенныйТекст, " ", "");
		
		//ДобавлятьЗначение = СтрНайти(ВРег(пВыделенныйТекст), "ЗНАЧЕНИЕ(") > 0;
		Попытка
			Выполнить("ДобавлятьЗначение = СтрНайти(ВРег(пВыделенныйТекст), ""ЗНАЧЕНИЕ("") > 0");
		Исключение
			ДобавлятьЗначение = Найти(ВРег(пВыделенныйТекст), "ЗНАЧЕНИЕ(") > 0;
		КонецПопытки;
		
		Если ДобавлятьЗначение Тогда
			пВыделенныйТекст = Сред(пВыделенныйТекст, 10);
			пВыделенныйТекст = СтрЗаменить(пВыделенныйТекст, ")", "");
		КонецЕсли; 
		
		//МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(пВыделенныйТекст, ".");
		МассивСтрок = РазбитьСтрокуВМассивПодстрок(пВыделенныйТекст, ".");
		
		Если МассивСтрок.Количество() = 0 Тогда
			Возврат;
		КонецЕсли; 
		
		пТипОбъекта = ВРег(МассивСтрок[0]);
		
		ТипОбъектаОпределен = Ложь;
		Для каждого Стр Из СписокВыбора Цикл
			Если пТипОбъекта = ВРег(Стр.Значение) Тогда
				ТипОбъекта = Стр;
				ТипОбъектаОпределен = Истина;
				Прервать;
			КонецЕсли; 
		КонецЦикла;
		
		Если НЕ ТипОбъектаОпределен Тогда
			Возврат;
		КонецЕсли;

		Если МассивСтрок.Количество() > 1 Тогда
			ИмяОбъекта = МассивСтрок[1];
		КонецЕсли; 

		Если МассивСтрок.Количество() > 2 И МассивСтрок[2] = "ПУСТАЯССЫЛКА" Тогда
			ПустаяСсылка = 0;
		ИначеЕсли МассивСтрок.Количество() > 2 Тогда
			ПустаяСсылка = 1;
			ПредопределенныйЭлемент = МассивСтрок[2];
		КонецЕсли;

	КонецЕсли;

	СисИнфо = Новый СистемнаяИнформация;
	ЭтаФорма.Объект.ВерсияПриложения = СисИнфо.ВерсияПриложения;
	
	Если Лев(Объект.ВерсияПриложения, 3) = "8.2" Тогда
		Объект.МодальностьРазрешена = Истина;
	Иначе
		РежимИспользованияМодальности = Метаданные["РежимИспользованияМодальности"];
		РежимИспользованияМодальности_Использовать = Метаданные["СвойстваОбъектов"].РежимИспользованияМодальности.Использовать;
		Объект.МодальностьРазрешена = РежимИспользованияМодальности = РежимИспользованияМодальности_Использовать;
	КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьРезультат();
	Элементы.ПредопределенныйЭлемент.Доступность = ПустаяСсылка = 1;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИмяОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

    Если ТипОбъекта = "" Тогда
    	Возврат;
    КонецЕсли;
    
    Если ТипОбъекта = "ВнешняяОбработка" Тогда
        Путь = ПолучитьПутьКОбработке();
        Если Путь <> Неопределено И Путь <> ЭтаФорма.ИмяОбъекта Тогда
            ЭтаФорма.ИмяОбъекта = Путь;
            ЭтаФорма.ТаблицаОбъекта = "";
            ЭтаФорма.СопоставлениеКолонок.Очистить();
        КонецЕсли; 
        Возврат;
    КонецЕсли; 
    
	ПутьКФорме = ПолучитьИмяОбработки(ЭтаФорма) + ".Форма.ФормаВыбораИзСписка";
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ТипОбъекта"  , ЭтаФорма.ТипОбъекта);
	ПараметрыОткрытия.Вставить("ИмяОбъекта"  , ЭтаФорма.ИмяОбъекта);
	ПараметрыОткрытия.Вставить("СтрокаПоиска", ЭтаФорма.ИмяОбъекта);
	

	Если Не ПустаяСтрока(ИмяОбъекта) Тогда
		
		ПараметрыОткрытия.Вставить("ТекстПоиска", ИмяОбъекта);
		
	КонецЕсли;

	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|Значение = ОткрытьФормуМодально(ПутьКФорме, ПараметрыОткрытия);
		|ИмяОбъектаНачалоВыбораЗавершение(Значение, Неопределено);";
	Иначе
		КодВыполнения = "
		|Оповещение = Новый ОписаниеОповещения(""ИмяОбъектаНачалоВыбораЗавершение"", ЭтаФорма);
		|ОткрытьФорму(ПутьКФорме, ПараметрыОткрытия, , , , , Оповещение);"; 
	КонецЕсли;
	
	Выполнить(КодВыполнения);
    
КонецПроцедуры

&НаКлиенте
Функция ИмяОбъектаНачалоВыбораЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено И Результат <> ЭтаФорма.ИмяОбъекта Тогда
	    ЭтаФорма.ИмяОбъекта = Результат;
		ЭтаФорма.ПредопределенныйЭлемент = "";
		СформироватьРезультат();
	КонецЕсли; 

КонецФункции // ВыбратьИмяОбъектаНаСервере()

&НаКлиенте
Процедура ПредопределенныйЭлементНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ИмяОбъекта = "" Тогда
	    Возврат;
	КонецЕсли;
    
	ПутьКФорме = ПолучитьИмяОбработки(ЭтаФорма) + ".Форма.ФормаВыбораИзСписка";
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ТипОбъекта"  , ЭтаФорма.ТипОбъекта);
	ПараметрыОткрытия.Вставить("ИмяОбъекта"  , ЭтаФорма.ИмяОбъекта);
	ПараметрыОткрытия.Вставить("СтрокаПоиска", ЭтаФорма.ПредопределенныйЭлемент);
	ПараметрыОткрытия.Вставить("ПредопределенныеЗначения");
	
	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|Значение = ОткрытьФормуМодально(ПутьКФорме, ПараметрыОткрытия);
		|ПредопределенныйЭлементНачалоВыбораЗавершение(Значение, Неопределено);";
	Иначе
		КодВыполнения = "
		|Оповещение = Новый ОписаниеОповещения(""ПредопределенныйЭлементНачалоВыбораЗавершение"", ЭтаФорма);
		|ОткрытьФорму(ПутьКФорме, ПараметрыОткрытия, , , , , Оповещение);"; 
	КонецЕсли;
	
	Выполнить(КодВыполнения);

КонецПроцедуры

&НаКлиенте
Процедура ПредопределенныйЭлементНачалоВыбораЗавершение(Значение, Параметры) Экспорт
	
	Если Значение <> Неопределено И Значение <> ЭтаФорма.ПредопределенныйЭлемент Тогда
        ЭтаФорма.ПредопределенныйЭлемент = Значение;
		СформироватьРезультат();
    КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПустаяСсылкаПриИзменении(Элемент)
	
	Элементы.ПредопределенныйЭлемент.Доступность = ПустаяСсылка = 1;
	СформироватьРезультат();
	
КонецПроцедуры

// SG, вставка 11/09/15 >>>
&НаКлиенте
Процедура ДобавлятьЗначениеПриИзменении(Элемент)
	
	СформироватьРезультат();
	
КонецПроцедуры
// SG, вставка 11/09/15 <<<


////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура ОК(Команда)
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ОРАБОТЧИКИ

&НаКлиенте
Функция ПолучитьПутьКОбработке()
    
    Режим = РежимДиалогаВыбораФайла.Открытие;
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
    ДиалогОткрытияФайла.ПолноеИмяФайла = "";
    Текст = "ru = ""Внешняя обработка""; en = ""External Data Processor""";
    Фильтр = НСтр(Текст)+"(*.epf)|*.epf";
    ДиалогОткрытияФайла.Фильтр = Фильтр;
    ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
    ДиалогОткрытияФайла.Заголовок = "Выберите файл";
    Если ДиалогОткрытияФайла.Выбрать() Тогда
        Возврат ДиалогОткрытияФайла.ПолноеИмяФайла;
    Иначе
        Возврат Неопределено;
    КонецЕсли;
    
КонецФункции // ПолучитьПутьСохраненияФайла()

&НаСервере
Функция ПолучитьИмяОбработкиНаСервере()
	
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция   ПолучитьИмяОбработки(Об)  
	
	Если ПустаяСтрока(Об.ИмяОбработки) Тогда
		Об.ИмяОбработки = Об.ПолучитьИмяОбработкиНаСервере();
	КонецЕсли;
	
	Возврат Об.ИмяОбработки;
	
КонецФункции // ПолучитьИмяОбработки

&НаКлиенте
Процедура СформироватьРезультат()

	Результат = ТипОбъекта + ?(ПустаяСтрока(ИмяОбъекта), "", "." + ИмяОбъекта) + ?(ПустаяСтрока(ИмяОбъекта), "", ?(ПустаяСсылка = 0, ".ПустаяСсылка", ?(ПустаяСтрока(ПредопределенныйЭлемент), "", "." + ПредопределенныйЭлемент)));

	// SG, вставка 11/09/15 >>>
	Если ДобавлятьЗначение Тогда
		Результат = "ЗНАЧЕНИЕ(" + Результат + ")";
	КонецЕсли;
	// SG, вставка 11/09/15 <<<
	
КонецПроцедуры // СформироватьРезультат()

&НаСервере
Функция СоздатьСписокПредопределенныхЭлементов(ТипОбъекта, ИмяОбъекта)

    Список = Новый СписокЗначений;
    
	Если ТипОбъекта = "Справочник" Тогда
    	ИмяКоллекции = "Справочники";
    ИначеЕсли ТипОбъекта = "Перечисление" Тогда
    	ИмяКоллекции = "Перечисления";
    ИначеЕсли ТипОбъекта = "ПланВидовХарактеристик" Тогда
    	ИмяКоллекции = "ПланыВидовХарактеристик";
    ИначеЕсли ТипОбъекта = "ПланСчетов" Тогда
    	ИмяКоллекции = "ПланыСчетов";
    ИначеЕсли ТипОбъекта = "ПланВидовРасчета" Тогда
    	ИмяКоллекции = "ПланыВидовРасчета";
	Иначе
		Возврат Список;
    КонецЕсли; 

	ТекстЗапроса = "
	|ВЫБРАТЬ
	| ИмяОбъекта.Ссылка
	|ИЗ
	| " + ТипОбъекта + "." + ИмяОбъекта + " КАК ИмяОбъекта
	|" + ?(НЕ ТипОбъекта = "Перечисление", "
	|ГДЕ
	| ИмяОбъекта.Предопределенный", "");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Выборка = Запрос.Выполнить().Выбрать();
	ИмяПредопределенного = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если ТипОбъекта = "Перечисление" Тогда
			ИндексЗначенияПеречисления = Перечисления[ИмяОбъекта].Индекс(Выборка.Ссылка);
			ИмяЗначенияПеречисления = Метаданные.Перечисления[ИмяОбъекта].ЗначенияПеречисления[ИндексЗначенияПеречисления].Имя;
			Список.Добавить(ИмяЗначенияПеречисления);
		Иначе
			Выполнить("ИмяПредопределенного = " + ИмяКоллекции + "[""" + ИмяОбъекта + """].ПолучитьИмяПредопределенного(Выборка.Ссылка)");
			Список.Добавить(ИмяПредопределенного);
		КонецЕсли;

	КонецЦикла;
	
	Список.СортироватьПоЗначению();
	
    Возврат Список;

КонецФункции // СоздатьСписокПредопределенныхЭлементов()


&НаСервереБезКонтекста
Функция РазбитьСтрокуВМассивПодстрок(Строка, Разделитель = ".")

	Массив = Новый Массив;
	
	Тчк = Найти(Строка, Разделитель);
	
	Пока Тчк > 0 Цикл
		Массив.Добавить(Лев(Строка, Тчк-1));
		Строка = Сред(Строка, Тчк+1);
		Тчк = Найти(Строка, Разделитель);
	КонецЦикла;
		
	Если СтрДлина(Строка) > 0 Тогда
		Массив.Добавить(Строка);
	КонецЕсли;
	
	Возврат Массив;
	

КонецФункции

